{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ /* eslint-disable prettier/prettier */ \"use strict\";\n// write code here\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar inputs = [\n    \"Name\",\n    \"Position\",\n    \"Age\",\n    \"Salary\"\n];\nvar columnNames = [\n    \"Name\",\n    \"Position\",\n    \"Office\",\n    \"Age\",\n    \"Salary\"\n];\nvar newEmployeeForm = document.createElement(\"form\");\nnewEmployeeForm.classList.add(\"new-employee-form\");\nfunction createInput(inputLabel, inputName) {\n    var inputType = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"text\";\n    var label = document.createElement(\"label\");\n    label.textContent = inputLabel;\n    var input = document.createElement(\"input\");\n    input.name = inputName;\n    if (inputLabel === \"Age\" || inputLabel === \"Salary\") input.type = \"number\";\n    else input.type = inputType;\n    input.setAttribute(\"data-qa\", inputName.toLowerCase());\n    label.appendChild(input);\n    return label;\n}\ninputs.forEach(function(item) {\n    var label = createInput(item, item.toLowerCase());\n    newEmployeeForm.appendChild(label);\n});\nvar officeLabel = document.createElement(\"label\");\nofficeLabel.textContent = \"Office\";\nvar select = document.createElement(\"select\");\nselect.name = \"office\";\nselect.setAttribute(\"data-qa\", officeLabel.textContent.toLowerCase());\noffices.forEach(function(item) {\n    var option = document.createElement(\"option\");\n    option.textContent = item;\n    option.value = item;\n    select.appendChild(option);\n});\nofficeLabel.appendChild(select);\nvar positionField = newEmployeeForm.querySelector('[data-qa=\"position\"]');\nnewEmployeeForm.insertBefore(officeLabel, positionField.parentNode.nextSibling);\nvar button = document.createElement(\"button\");\nbutton.textContent = \"Save to table\";\nbutton.type = \"submit\";\nnewEmployeeForm.appendChild(button);\ndocument.body.appendChild(newEmployeeForm);\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var header = document.querySelectorAll(\"thead th\");\n    var table = document.querySelector(\"tbody\");\n    var tableRows = Array.from(table.querySelectorAll(\"tr\"));\n    var sortOrder = {};\n    header.forEach(function(element, index) {\n        sortOrder[index] = true;\n        element.addEventListener(\"click\", function() {\n            var sortList = function sortList(list) {\n                var sortedList = [];\n                switch(headerName){\n                    case \"Name\":\n                    case \"Position\":\n                    case \"Office\":\n                        sortedList = list.sort(function(a, b) {\n                            return sortOrder[columnNumber] ? a.cells[columnNumber].textContent.trim().localeCompare(b.cells[columnNumber].textContent.trim()) : b.cells[columnNumber].textContent.trim().localeCompare(a.cells[columnNumber].textContent.trim());\n                        });\n                        break;\n                    case \"Salary\":\n                        sortedList = list.sort(function(a, b) {\n                            return sortOrder[columnNumber] ? parseFloat(a.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\")) - parseFloat(b.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\")) : parseFloat(b.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\")) - parseFloat(a.cells[columnNumber].textContent.slice(1).split(\",\").join(\"\"));\n                        });\n                        break;\n                    case \"Age\":\n                        sortedList = list.sort(function(a, b) {\n                            return sortOrder[columnNumber] ? parseInt(a.cells[columnNumber].textContent) - parseInt(b.cells[columnNumber].textContent) : parseInt(b.cells[columnNumber].textContent) - parseInt(a.cells[columnNumber].textContent);\n                        });\n                        break;\n                    default:\n                        return;\n                }\n                table.innerHTML = \"\";\n                sortedList.forEach(function(employee) {\n                    return table.appendChild(employee);\n                });\n            };\n            var headerName = element.textContent.trim();\n            var columnNumber = Array.from(header).indexOf(element);\n            sortList(tableRows);\n            sortOrder[columnNumber] = !sortOrder[columnNumber];\n        });\n    });\n    tableRows.forEach(function(row) {\n        row.addEventListener(\"click\", function() {\n            tableRows.forEach(function(r) {\n                return r.classList.remove(\"active\");\n            });\n            row.classList.add(\"active\");\n        });\n    });\n    table.addEventListener(\"dblclick\", function(e) {\n        var save = function save() {\n            if (isSaving) return;\n            isSaving = true;\n            if (columnName === \"Age\") {\n                var age = parseInt(input.value);\n                if (age >= 18 && age <= 90) cellForEdit.textContent = age;\n                else {\n                    cellForEdit.textContent = initialValue;\n                    pushNotification(\"Error message\", \"Age must be 18 - 90 years\", \"error\");\n                }\n            } else if (columnName === \"Name\") {\n                if (input.value.trim().length >= 4) cellForEdit.textContent = input.value;\n                else {\n                    cellForEdit.textContent = initialValue;\n                    pushNotification(\"Error message\", \"Name must have at least 4 letters\", \"error\");\n                }\n            } else if (columnName === \"Position\") {\n                if (input.value.trim().length > 0) cellForEdit.textContent = input.value;\n                else {\n                    cellForEdit.textContent = initialValue;\n                    pushNotification(\"Error message\", \"Position must be...\", \"error\");\n                }\n            } else if (columnName === \"Salary\") {\n                if (input.value.trim().length > 0) cellForEdit.textContent = \"$\" + Number(input.value).toLocaleString(\"en-US\");\n                else cellForEdit.textContent = initialValue;\n            } else cellForEdit.textContent = input.value || initialValue;\n            input.remove();\n        };\n        e.preventDefault();\n        var cellForEdit = e.target;\n        var initialValue = e.target.textContent;\n        var columnName = cellForEdit.dataset.columnName || columnNames[cellForEdit.cellIndex];\n        var input;\n        if (columnName === \"Office\") {\n            input = document.createElement(\"select\");\n            offices.forEach(function(office) {\n                var option = document.createElement(\"option\");\n                option.value = office;\n                option.textContent = office;\n                if (office === initialValue) option.selected = true;\n                input.appendChild(option);\n            });\n        } else {\n            input = document.createElement(\"input\");\n            input.value = initialValue;\n            if (columnName === \"Age\" || columnName === \"Salary\") {\n                input.type = \"number\";\n                input.min = 18;\n                input.max = 90;\n            } else input.type = \"text\";\n        }\n        input.classList.add(\"cell-input\");\n        cellForEdit.textContent = \"\";\n        cellForEdit.appendChild(input);\n        input.focus();\n        var isSaving = false;\n        input.addEventListener(\"blur\", save);\n        input.addEventListener(\"keydown\", function(ev) {\n            if (ev.key === \"Enter\") save();\n        });\n    });\n    newEmployeeForm.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var isValid = true;\n        var newRow = document.createElement(\"tr\");\n        columnNames.forEach(function(columnName) {\n            var newCell = document.createElement(\"td\");\n            var inputValue = newEmployeeForm.querySelector(\"[name='\".concat(columnName.toLowerCase(), \"']\"));\n            if (columnName === \"Office\") {\n                var officeInput = newEmployeeForm.querySelector(\"select[name='office']\");\n                newCell.textContent = officeInput.value;\n                newRow.appendChild(newCell);\n            }\n            if (columnName === \"Name\") {\n                if (inputValue.value.trim().length >= 4) {\n                    newCell.textContent = inputValue.value;\n                    newRow.appendChild(newCell);\n                } else {\n                    isValid = false;\n                    pushNotification(\"Error message\", \"Name must have at least 4 letters\", \"error\");\n                }\n            } else if (columnName === \"Age\") {\n                var age = parseInt(inputValue.value);\n                if (age <= 90 && age >= 18) {\n                    newCell.textContent = inputValue.value;\n                    newRow.appendChild(newCell);\n                } else {\n                    isValid = false;\n                    pushNotification(\"Error message\", \"Age must be 18 - 90 years\", \"error\");\n                }\n            } else if (columnName === \"Position\") {\n                if (inputValue.value.trim().length > 0) {\n                    newCell.textContent = inputValue.value;\n                    newRow.appendChild(newCell);\n                } else {\n                    isValid = false;\n                    pushNotification(\"Error message\", \"Position must be...\", \"error\");\n                }\n            } else if (columnName === \"Salary\") {\n                if (inputValue.value.trim().length > 0) {\n                    newCell.textContent = \"$\" + Number(inputValue.value).toLocaleString(\"en-US\");\n                    newRow.appendChild(newCell);\n                } else {\n                    isValid = false;\n                    pushNotification(\"Error message\", \"Salary must be...\", \"error\");\n                }\n            } else {\n                newCell.textContent = inputValue.value;\n                newRow.appendChild(newCell);\n            }\n        });\n        if (isValid) {\n            table.appendChild(newRow);\n            tableRows = Array.from(table.querySelectorAll(\"tr\"));\n            pushNotification(\"Success message\", \"New employee successfully added\", \"success\");\n            newEmployeeForm.reset();\n        }\n    });\n});\nvar notifications = [];\nfunction updateNotifications() {\n    notifications.forEach(function(notification, index) {\n        notification.style.top = \"\".concat(10 + index * 120, \"px\");\n    });\n}\nvar pushNotification = function(title, description, type) {\n    var body = document.querySelector(\"body\");\n    var notification = document.createElement(\"div\");\n    var notificationTitle = document.createElement(\"h2\");\n    var notificationDescription = document.createElement(\"p\");\n    notificationTitle.innerText = title;\n    notificationTitle.classList.add(\"title\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notificationDescription.innerText = description;\n    body.appendChild(notification);\n    notifications.push(notification);\n    updateNotifications();\n    // setTimeout(() => (notification.style.visibility = 'hidden'), 2000);\n    setTimeout(function() {\n        notification.remove();\n        notifications.shift();\n        updateNotifications();\n    }, 2000);\n    notification.appendChild(notificationTitle);\n    notification.appendChild(notificationDescription);\n    notification.classList.add(\"notification\", type);\n};\n\n//# sourceMappingURL=index.0730a2d6.js.map\n","/* eslint-disable function-paren-newline */\n/* eslint-disable prettier/prettier */\n\n'use strict';\n\n// write code here\n\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\nconst inputs = ['Name', 'Position', 'Age', 'Salary'];\nconst columnNames = ['Name', 'Position','Office', 'Age', 'Salary'];\n\nconst newEmployeeForm = document.createElement('form');\n\nnewEmployeeForm.classList.add('new-employee-form');\n\nfunction createInput(inputLabel, inputName, inputType = 'text') {\n  const label = document.createElement('label');\n\n  label.textContent = inputLabel;\n\n  const input = document.createElement('input');\n\n  input.name = inputName;\n\n  if (inputLabel === 'Age' || inputLabel === 'Salary') {\n    input.type = 'number';\n  } else {\n    input.type = inputType;\n  }\n\n  input.setAttribute('data-qa', inputName.toLowerCase());\n  label.appendChild(input);\n\n  return label;\n}\n\ninputs.forEach((item) => {\n\n  const label = createInput(item, item.toLowerCase());\n\n  newEmployeeForm.appendChild(label);\n});\n\nconst officeLabel = document.createElement('label');\n\nofficeLabel.textContent = 'Office';\n\nconst select = document.createElement('select');\n\nselect.name = 'office';\nselect.setAttribute('data-qa', officeLabel.textContent.toLowerCase());\n\noffices.forEach((item) => {\n  const option = document.createElement('option');\n\n  option.textContent = item;\n  option.value = item;\n  select.appendChild(option);\n});\nofficeLabel.appendChild(select);\n\nconst positionField = newEmployeeForm.querySelector('[data-qa=\"position\"]');\n\nnewEmployeeForm.insertBefore(officeLabel, positionField.parentNode.nextSibling);\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nbutton.type = 'submit';\n\nnewEmployeeForm.appendChild(button);\ndocument.body.appendChild(newEmployeeForm);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const header = document.querySelectorAll('thead th');\n  const table = document.querySelector('tbody');\n  let tableRows = Array.from(table.querySelectorAll('tr'));\n  const sortOrder = {};\n\n  header.forEach((element, index) => {\n    sortOrder[index] = true;\n\n    element.addEventListener('click', () => {\n      const headerName = element.textContent.trim();\n      const columnNumber = Array.from(header).indexOf(element);\n\n      function sortList(list) {\n        let sortedList = [];\n\n        switch (headerName) {\n          case 'Name':\n          case 'Position':\n          case 'Office':\n            sortedList = list.sort((a, b) =>\n              sortOrder[columnNumber]\n                ? a.cells[columnNumber].textContent\n                  .trim()\n                  .localeCompare(b.cells[columnNumber].textContent.trim())\n                : b.cells[columnNumber].textContent\n                  .trim()\n                  .localeCompare(a.cells[columnNumber].textContent.trim()),\n            );\n            break;\n\n          case 'Salary':\n            sortedList = list.sort((a, b) =>\n              sortOrder[columnNumber]\n                ? parseFloat(\n                  a.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                ) -\n                parseFloat(\n                  b.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                )\n                : parseFloat(\n                  b.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                ) -\n                parseFloat(\n                  a.cells[columnNumber].textContent\n                    .slice(1)\n                    .split(',')\n                    .join(''),\n                ),\n            );\n\n            break;\n\n          case 'Age':\n            sortedList = list.sort((a, b) =>\n              sortOrder[columnNumber]\n                ? parseInt(a.cells[columnNumber].textContent) -\n                parseInt(b.cells[columnNumber].textContent)\n                : parseInt(b.cells[columnNumber].textContent) -\n                parseInt(a.cells[columnNumber].textContent),\n            );\n\n            break;\n\n          default:\n            return;\n        }\n\n        table.innerHTML = '';\n        sortedList.forEach((employee) => table.appendChild(employee));\n      }\n\n      sortList(tableRows);\n      sortOrder[columnNumber] = !sortOrder[columnNumber];\n    });\n  },\n  );\n\n  tableRows.forEach((row) => {\n    row.addEventListener('click', () => {\n      tableRows.forEach((r) => r.classList.remove('active'));\n      row.classList.add('active');\n    });\n  });\n\n  table.addEventListener('dblclick', (e) => {\n    e.preventDefault();\n\n    const cellForEdit = e.target;\n    const initialValue = e.target.textContent;\n    const columnName = cellForEdit.dataset.columnName\n      || columnNames[cellForEdit.cellIndex];\n\n    let input;\n\n    if (columnName === 'Office') {\n      input = document.createElement('select');\n\n      offices.forEach((office) => {\n        const option = document.createElement('option');\n\n        option.value = office;\n        option.textContent = office;\n\n        if (office === initialValue) {\n          option.selected = true;\n        }\n        input.appendChild(option);\n      });\n    } else {\n      input = document.createElement('input');\n      input.value = initialValue;\n\n      if (columnName === 'Age' || columnName === 'Salary') {\n        input.type = 'number';\n        input.min = 18;\n        input.max = 90;\n      } else {\n        input.type = 'text';\n      }\n\n    }\n\n    input.classList.add('cell-input');\n\n    cellForEdit.textContent = '';\n    cellForEdit.appendChild(input);\n    input.focus();\n\n    let isSaving = false;\n\n    function save() {\n      if (isSaving) {\n        return;\n      }\n      isSaving = true;\n\n      if (columnName === 'Age') {\n        const age = parseInt(input.value);\n\n        if (age >= 18 && age <= 90) {\n          cellForEdit.textContent = age;\n        } else {\n          cellForEdit.textContent = initialValue;\n\n          pushNotification(\n            'Error message',\n            'Age must be 18 - 90 years',\n            'error',\n          );\n        }\n      } else if (columnName === 'Name') {\n        if (input.value.trim().length >= 4) {\n          cellForEdit.textContent = input.value;\n        } else {\n          cellForEdit.textContent = initialValue;\n\n          pushNotification(\n            'Error message',\n            'Name must have at least 4 letters',\n            'error',\n          );\n        }\n      } else if (columnName === 'Position') {\n        if (input.value.trim().length > 0) {\n          cellForEdit.textContent = input.value;\n        } else {\n          cellForEdit.textContent = initialValue;\n\n          pushNotification(\n            'Error message',\n            'Position must be...',\n            'error',\n          );\n        }\n      } else if (columnName === 'Salary') {\n        if (input.value.trim().length > 0) {\n          cellForEdit.textContent = '$' + Number(input.value)\n            .toLocaleString('en-US');\n        } else {\n          cellForEdit.textContent = initialValue;\n        }\n      } else {\n        cellForEdit.textContent = input.value || initialValue;\n      }\n      input.remove();\n    }\n\n    input.addEventListener('blur', save);\n\n    input.addEventListener('keydown', (ev) => {\n      if (ev.key === 'Enter') {\n        save();\n      }\n    });\n  });\n\n  newEmployeeForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    let isValid = true;\n    const newRow = document.createElement('tr');\n\n    columnNames.forEach((columnName) => {\n      const newCell = document.createElement('td');\n      const inputValue = newEmployeeForm.querySelector(`[name='${columnName.toLowerCase()}']`);\n\n      if (columnName === 'Office') {\n        const officeInput = newEmployeeForm.querySelector(`select[name='office']`);\n\n        newCell.textContent = officeInput.value;\n        newRow.appendChild(newCell);\n      }\n\n      if (columnName === 'Name') {\n        if (inputValue.value.trim().length >= 4) {\n          newCell.textContent = inputValue.value;\n          newRow.appendChild(newCell);\n        } else {\n          isValid = false;\n\n          pushNotification(\n            'Error message',\n            'Name must have at least 4 letters',\n            'error',\n          );\n        }\n      } else if (columnName === 'Age') {\n        const age = parseInt(inputValue.value);\n\n        if (age <= 90 && age >= 18) {\n          newCell.textContent = inputValue.value;\n          newRow.appendChild(newCell);\n        } else {\n          isValid = false;\n\n          pushNotification(\n            'Error message',\n            'Age must be 18 - 90 years',\n            'error',\n          );\n        }\n      } else if (columnName === 'Position') {\n        if (inputValue.value.trim().length > 0) {\n          newCell.textContent = inputValue.value;\n          newRow.appendChild(newCell);\n        } else {\n          isValid = false;\n\n          pushNotification(\n            'Error message',\n            'Position must be...',\n            'error',\n          );\n        }\n      } else if (columnName === 'Salary') {\n        if (inputValue.value.trim().length > 0) {\n          newCell.textContent = '$' + Number(inputValue.value)\n            .toLocaleString('en-US');\n          newRow.appendChild(newCell);\n        } else {\n          isValid = false;\n\n          pushNotification(\n            'Error message',\n            'Salary must be...',\n            'error',\n          );\n        }\n\n      } else {\n        newCell.textContent = inputValue.value;\n        newRow.appendChild(newCell);\n      }\n    },\n    );\n\n    if (isValid) {\n      table.appendChild(newRow);\n      tableRows = Array.from(table.querySelectorAll('tr'));\n\n      pushNotification(\n        'Success message',\n        'New employee successfully added',\n        'success',\n      );\n      newEmployeeForm.reset();\n    }\n  });\n});\n\nconst notifications = [];\n\nfunction updateNotifications() {\n  notifications.forEach((notification, index) => {\n    notification.style.top = `${10 + index * 120}px`;\n  });\n}\n\nconst pushNotification = (title, description, type) => {\n  const body = document.querySelector('body');\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationDescription = document.createElement('p');\n\n  notificationTitle.innerText = title;\n  notificationTitle.classList.add('title');\n  notification.setAttribute('data-qa', 'notification');\n\n  notificationDescription.innerText = description;\n\n  body.appendChild(notification);\n  notifications.push(notification);\n  updateNotifications();\n  // setTimeout(() => (notification.style.visibility = 'hidden'), 2000);\n\n  setTimeout(() => {\n    notification.remove();\n    notifications.shift();\n    updateNotifications();\n  }, 2000);\n\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationDescription);\n\n  notification.classList.add('notification', type);\n};\n\n"],"names":["offices","columnNames","newEmployeeForm","document","createElement","classList","add","inputs","forEach","item","label","createInput","inputLabel","inputName","inputType","arguments","length","textContent","input","name","type","setAttribute","toLowerCase","appendChild","officeLabel","select","option","value","positionField","querySelector","insertBefore","parentNode","nextSibling","button","body","addEventListener","header","querySelectorAll","table","tableRows","Array","from","sortOrder","element","index","headerName","trim","columnNumber","indexOf","sortList","list","sortedList","sort","a","b","cells","localeCompare","parseFloat","slice","split","join","parseInt","innerHTML","employee","row","r","remove","e","save","isSaving","columnName","age","cellForEdit","initialValue","pushNotification","Number","toLocaleString","preventDefault","target","dataset","cellIndex","office","selected","min","max","focus","ev","key","isValid","newRow","newCell","inputValue","concat","officeInput","reset","notifications","updateNotifications","notification","style","top","title","description","notificationTitle","notificationDescription","innerText","push","setTimeout","shift"],"version":3,"file":"index.0730a2d6.js.map"}